<?xml version="1.0"?>
<!--
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
-->
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <type name="Magento\DataExporter\Model\FeedPool">
        <arguments>
            <argument name="classMap" xsi:type="array">
                <item name="inventoryStockStatus" xsi:type="string">Magento\InventoryDataExporter\Model\Indexer\StockStatusFeed</item>
            </argument>
        </arguments>
    </type>
    <virtualType name="Magento\InventoryDataExporter\Model\Indexer\StockStatusFeed"  type="Magento\DataExporter\Model\Feed">
        <arguments>
            <argument name="feedIndexMetadata" xsi:type="object">Magento\InventoryDataExporter\Model\Indexer\StockStatusFeedIndexMetadata</argument>
        </arguments>
    </virtualType>
    <virtualType name="Magento\InventoryDataExporter\Model\Indexer\StockStatusFeedIndexMetadata" type="Magento\DataExporter\Model\Indexer\FeedIndexMetadata">
        <arguments>
            <argument name="feedName" xsi:type="string">inventoryStockStatus</argument>
            <argument name="feedSummary" xsi:type="string">Inventory Stock Status Feed</argument>
            <argument name="feedIdentity" xsi:type="string">productId</argument>
            <!-- source table used only during full reindex -->
            <argument name="sourceTableName" xsi:type="string">catalog_product_entity</argument>
            <argument name="sourceTableField" xsi:type="string">entity_id</argument>
            <!-- use when view entity field is different from the source table entity. It will use this field to link view identity field with source identity field -->
            <argument name="viewSourceLinkField" xsi:type="string">sku</argument>
            <argument name="feedTableName" xsi:type="string">inventory_data_exporter_stock_status_feed</argument>
            <argument name="feedTableMutableColumns" xsi:type="array">
                <item name="feed_data" xsi:type="string">feed_data</item>
                <item name="is_deleted" xsi:type="string">is_deleted</item>
            </argument>
            <argument name="entitiesRemovable" xsi:type="boolean">true</argument>

            <argument name="exportImmediately" xsi:type="boolean">true</argument>
            <argument name="persistExportedFeed" xsi:type="init_parameter">Magento\DataExporter\Model\ExportFeedInterface::PERSIST_EXPORTED_FEED</argument>
            <argument name="minimalPayload" xsi:type="array">
                <item name="stockId" xsi:type="string">stockId</item>
                <item name="sku" xsi:type="string">sku</item>
            </argument>
            <argument name="feedItemIdentifiers" xsi:type="array">
                <item name="stock_id" xsi:type="string">stockId</item>
                <item name="sku" xsi:type="string">sku</item>
            </argument>
            <!--ProductId is a utility field that we are using to build the DB record. It's not used in service and should not be included in the hash-->
            <argument name="excludeFromHashFields" xsi:type="array">
                <item name="0" xsi:type="string">productId</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="Magento\InventoryDataExporter\Model\Indexer\StockStatusFeedIndexer"  type="Magento\DataExporter\Model\Indexer\FeedIndexer">
        <arguments>
            <argument name="feedIndexMetadata" xsi:type="object">Magento\InventoryDataExporter\Model\Indexer\StockStatusFeedIndexMetadata</argument>
        </arguments>
    </virtualType>
    <virtualType name="Magento\InventoryDataExporter\Model\StockStatusFeed" type="Magento\DataExporter\Model\Feed">
        <arguments>
            <argument name="feedIndexMetadata" xsi:type="object">Magento\InventoryDataExporter\Model\Indexer\StockStatusFeedIndexMetadata</argument>
        </arguments>
    </virtualType>
    <type name="Magento\DataExporter\Model\FeedMetadataPool">
        <arguments>
            <argument name="classMap" xsi:type="array">
                <item name="inventoryStockStatus" xsi:type="object">Magento\InventoryDataExporter\Model\Indexer\StockStatusFeedIndexMetadata</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Framework\Mview\View\Changelog">
        <plugin name="create_stock_item_changelog_table" type="Magento\InventoryDataExporter\Plugin\Mview\StockStatusChangelog"/>
    </type>

    <type name="Magento\Inventory\Model\ResourceModel\SourceItem\DeleteMultiple">
        <plugin name="mark-stock-status-items-as-deleted" type="Magento\InventoryDataExporter\Plugin\MarkItemsAsDeleted"/>
    </type>
    <type name="Magento\InventoryDataExporter\Model\Query\StockStatusDeleteQuery">
        <arguments>
            <argument name="metadata" xsi:type="object">Magento\InventoryDataExporter\Model\Indexer\StockStatusFeedIndexMetadata</argument>
        </arguments>
    </type>
    <type name="Magento\InventoryDataExporter\Model\Query\ChangelogSelectQuery">
        <arguments>
            <argument name="metadata" xsi:type="object">Magento\InventoryDataExporter\Model\Indexer\StockStatusFeedIndexMetadata</argument>
        </arguments>
    </type>
    <type name="Magento\DataExporter\Model\Provider\ChangelogQueryProvider">
        <arguments>
            <argument name="changeLogQuery" xsi:type="array">
                <item name="inventory_data_exporter_stock_status_feed" xsi:type="object">Magento\InventoryDataExporter\Model\Query\ChangelogSelectQuery</item>
            </argument>
        </arguments>
    </type>
    <!-- Plugins to cover on-save indexer mode  -->
    <type name="Magento\InventoryApi\Api\SourceItemsSaveInterface">
        <!-- sort order guarantee it will be executed after Inventory Index plugin -->
        <plugin name="reindex-stock-status-exporter-indexer-on-source-item-update" type="Magento\InventoryDataExporter\Plugin\SourceItem\SourceItemUpdate" sortOrder="10"/>
    </type>
    <type name="Magento\InventoryCatalogApi\Api\BulkSourceUnassignInterface">
        <plugin name="reindex-stock-status-exporter-indexer-on-bulk-source-unassign" type="Magento\InventoryDataExporter\Plugin\SourceItem\BulkSourceUnassign" sortOrder="100"/>
        <plugin name="mark-stock-status-items-unassigned-on-bulk-unassign" type="Magento\InventoryDataExporter\Plugin\BulkSourceUnassign" sortOrder="200"/>
    </type>
</config>
